{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,QAAS,CACPC,UAAW,uBACXC,WAAY,UACZC,kBAAmB,wBAErBC,QAAS,CACPH,UAAW,sBACXC,WAAY,UACZC,kBAAmB,yBAGvB,MAAME,EAAOC,SAASC,cAAc,SA8BpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,IAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEtBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CArCbL,EAAKY,iBAAiB,SAEtB,SAAoBC,GAClB,GAAIA,EAAEC,SAAWd,EAAKe,iBAAkB,CACtCF,EAAEG,iBACF,MACEX,OAASY,MAAOC,GAChBC,MAAQF,MAAOE,GACfC,QAAUH,MAAOG,IACfpB,EAAKqB,SAET,IAAIC,EAAW,EACXC,EAAeC,OAAON,GAC1B,KAAOI,GAAYE,OAAOJ,IACxBjB,EAAcmB,EAAUC,GACrBE,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBb,EAAAF,GAASG,OAAOM,QACd,qBAAqBK,QAAeC,MACrC,IAEFqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBb,EAAAF,GAASG,OAAOE,QAAQ,oBAAoBS,QAAeC,MAAU,IAEzEkB,GAAgBC,OAAOL,GACvBG,GAAY,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  failure: {\n    textColor: 'rgba(242, 10, 33, 1)',\n    background: '#80cbc4',\n    notiflixIconColor: 'rgba(242, 10, 33, 1)',\n  },\n  success: {\n    textColor: 'rgba(6, 20, 214, 1)',\n    background: '#80cbc4',\n    notiflixIconColor: 'rgba(6, 20, 214, 1)',\n  },\n});\nconst form = document.querySelector('.form');\nform.addEventListener('click', onBtnClick);\n\nfunction onBtnClick(e) {\n  if (e.target === form.lastElementChild) {\n    e.preventDefault();\n    const {\n      delay: { value: delay },\n      step: { value: step },\n      amount: { value: amount },\n    } = form.elements;\n\n    let position = 1;\n    let delayCounter = Number(delay);\n    while (position <= Number(amount)) {\n      createPromise(position, delayCounter)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n      delayCounter += Number(step);\n      position += 1;\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$1GAPJ","parcelRequire","$parcel$interopDefault","Notify","init","failure","textColor","background","notiflixIconColor","success","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","target","lastElementChild","preventDefault","value","delay1","step","amount","elements","position1","delayCounter","Number","then","catch"],"version":3,"file":"03-promises.6188f17b.js.map"}